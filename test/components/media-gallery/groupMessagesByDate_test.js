var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var import_chai = require("chai");
var import_lodash = require("lodash");
var import_MIME = require("../../../types/MIME");
var import_groupMediaItemsByDate = require("../../../components/conversation/media-gallery/groupMediaItemsByDate");
var import_test_utils = require("../../test-utils");
const generatedMessageSenderKey = import_test_utils.TestUtils.generateFakePubKey().key;
const toMediaItem = /* @__PURE__ */ __name((date) => ({
  objectURL: date.toUTCString(),
  index: 0,
  attachment: {
    fileName: "fileName",
    contentType: import_MIME.IMAGE_JPEG,
    url: "url",
    fileSize: null,
    screenshot: null,
    thumbnail: null,
    path: "123456",
    id: 123456
  },
  contentType: import_MIME.IMAGE_JPEG,
  messageSender: generatedMessageSenderKey,
  messageTimestamp: date.getTime(),
  messageId: "123456"
}), "toMediaItem");
describe("groupMediaItemsByDate", () => {
  it("should group mediaItems", () => {
    const referenceTime = new Date("2018-04-12T18:00Z").getTime();
    const input = (0, import_lodash.shuffle)([
      toMediaItem(new Date("2018-04-12T12:00Z")),
      toMediaItem(new Date("2018-04-12T00:01Z")),
      toMediaItem(new Date("2018-04-11T23:59Z")),
      toMediaItem(new Date("2018-04-09T00:01Z")),
      toMediaItem(new Date("2018-04-08T23:59Z")),
      toMediaItem(new Date("2018-04-01T00:01Z")),
      toMediaItem(new Date("2018-03-31T23:59Z")),
      toMediaItem(new Date("2018-03-01T14:00Z")),
      toMediaItem(new Date("2011-02-28T23:59Z")),
      toMediaItem(new Date("2011-02-01T10:00Z"))
    ]);
    const expected = [
      {
        type: "today",
        mediaItems: [
          {
            objectURL: "Thu, 12 Apr 2018 12:00:00 GMT",
            index: 0,
            contentType: import_MIME.IMAGE_JPEG,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 15235344e5,
            messageId: "123456"
          },
          {
            objectURL: "Thu, 12 Apr 2018 00:01:00 GMT",
            index: 0,
            contentType: import_MIME.IMAGE_JPEG,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 152349126e4,
            messageId: "123456"
          }
        ]
      },
      {
        type: "yesterday",
        mediaItems: [
          {
            objectURL: "Wed, 11 Apr 2018 23:59:00 GMT",
            index: 0,
            contentType: import_MIME.IMAGE_JPEG,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 152349114e4,
            messageId: "123456"
          }
        ]
      },
      {
        type: "thisWeek",
        mediaItems: [
          {
            objectURL: "Mon, 09 Apr 2018 00:01:00 GMT",
            index: 0,
            contentType: import_MIME.IMAGE_JPEG,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 152323206e4,
            messageId: "123456"
          }
        ]
      },
      {
        type: "thisMonth",
        mediaItems: [
          {
            objectURL: "Sun, 08 Apr 2018 23:59:00 GMT",
            index: 0,
            contentType: import_MIME.IMAGE_JPEG,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 152323194e4,
            messageId: "123456"
          },
          {
            objectURL: "Sun, 01 Apr 2018 00:01:00 GMT",
            index: 0,
            contentType: import_MIME.IMAGE_JPEG,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 152254086e4,
            messageId: "123456"
          }
        ]
      },
      {
        type: "yearMonth",
        year: 2018,
        month: 2,
        mediaItems: [
          {
            objectURL: "Sat, 31 Mar 2018 23:59:00 GMT",
            index: 0,
            contentType: import_MIME.IMAGE_JPEG,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 152254074e4,
            messageId: "123456"
          },
          {
            objectURL: "Thu, 01 Mar 2018 14:00:00 GMT",
            index: 0,
            contentType: import_MIME.IMAGE_JPEG,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 15199128e5,
            messageId: "123456"
          }
        ]
      },
      {
        type: "yearMonth",
        year: 2011,
        month: 1,
        mediaItems: [
          {
            objectURL: "Mon, 28 Feb 2011 23:59:00 GMT",
            index: 0,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            contentType: import_MIME.IMAGE_JPEG,
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 129893754e4,
            messageId: "123456"
          },
          {
            objectURL: "Tue, 01 Feb 2011 10:00:00 GMT",
            index: 0,
            contentType: import_MIME.IMAGE_JPEG,
            messageSender: generatedMessageSenderKey,
            messageTimestamp: 12965544e5,
            attachment: {
              fileName: "fileName",
              contentType: import_MIME.IMAGE_JPEG,
              url: "url",
              fileSize: null,
              screenshot: null,
              thumbnail: null,
              path: "123456",
              id: 123456
            },
            messageId: "123456"
          }
        ]
      }
    ];
    const actual = (0, import_groupMediaItemsByDate.groupMediaItemsByDate)(referenceTime, input);
    import_chai.assert.deepEqual(actual, expected);
  });
});
//# sourceMappingURL=data:application/json;base64,
